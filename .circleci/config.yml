# Python CircleCI 2.0 configuration file

version: 2.1
jobs:
  test:
    docker:
      - image: circleci/python:3.8-buster-node
      - image: circleci/postgres:12
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - poetry-v1-{{ checksum "poetry.lock" }}
            - poetry-

      - run:
          name: install python packages
          command: poetry install

      - save_cache:
          key: poetry-v1-{{ checksum "poetry.lock" }}
          paths:
            - ~/.local
            - ~/.cache

      - restore_cache:
          keys:
            - npm-v1-{{ checksum "package-lock.json" }}
            - npm-

      - run:
          name: install node packages
          command: npm ci

      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

      - run:
          name: generate bundles
          command: npm run build

      - run:
          name: collect static files
          command: poetry run python manage.py collectstatic --noinput

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: check if model changes are missing migrations
          command: poetry run python manage.py makemigrations --check --dry-run

      - run:
          name: run tests
          command: |
            poetry run pytest --cov --cov-report=html --cov-report=xml --cov-report=term

      - store_artifacts:
          path: test-results
          destination: test-results

      - store_test_results:
          path: test-results
          destination: test-results

  lint:
    docker:
        - image: circleci/python:3.8-buster-node

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - poetry-v1-{{ checksum "poetry.lock" }}
            - poetry-

      - run:
          name: install python packages
          command: poetry install

      - save_cache:
          key: poetry-v1-{{ checksum "poetry.lock" }}
          paths:
            - ~/.local
            - ~/.cache

      - run:
          name: run black
          command: poetry run black --check .

      - run:
          name: run flake8
          command: poetry run flake8 --max-line-length=88 --ignore=E203,W503 --exclude=migrations .

      - run:
          name: run isort
          command: poetry run isort --check .

workflows:
  test_and_lint:
    jobs:
      - test
      - lint
