- name: verify
  hosts: target
  gather_facts: no
  tasks:

    - name: check testing user name on target
      command: >
        pipenv run ./manage.py shell -c
        "import sys;
        from users.models import User;
        alex = User.objects.first();
        ok = (alex.first_name == '{{ source_user_name }}');
        sys.exit(0 if ok else 1)"
      args:
        chdir: "{{ server_root_dir }}"
      changed_when: false

    - name: check previous testing user name in backup of target's DB
      # Alternative 1: pg_restore and manage.py shell first_name == ...
      # Also needs a separate task to get the filename of a dump

      # Alternative 2: just search for the magic string in SQL instructions.
      # Also lazily use a bash trick to get a single dump filename.
      shell:
        cmd: |
          set -o pipefail
          dump=(~/db_dumps/*.dump)
          pg_restore --file=- "$dump" | grep {{ target_user_name }}
        executable: /bin/bash
      changed_when: false

    - name: stat Media files on target
      stat:
        path: "{{ server_root_dir }}/project/media/{{ lookup('vars', item) }}"
        get_attributes: no
        get_checksum: no
        get_mime: no
      loop:
        - source_media_name
        - target_media_name
      register: media_files

    - name: assert Media files
      assert:
        that: item.stat.exists
        quiet: yes
      loop: "{{ media_files.results }}"
